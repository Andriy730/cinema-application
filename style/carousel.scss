@import "colors";

@mixin size($size) {
    width: $size;
    height: $size;
}

@mixin carousel-control-icon($direction) {
    @include size(45px);
    border-radius: 30px;
    border: 5px solid $carousel-control-border-color;
    background-color: $carousel-control-color;
  @if $direction == "left" {
    background-image: url("../images/arrow-left.png");
  }
  
  @if $direction == "right" {
    background-image: url("../images/arrow-right.png");
  } 
}

body {
  overflow: hidden;
  background-color: $navbar-color;
  background-image: none;
}

$ci: carousel-item;
@media (min-width: 768px) and (max-width: 990px) {
  .multi-item-carousel {
    .carousel-inner {
      .#{$ci} {
        // NEW to v4.3.1: all margin-right properties come with -100% as default
        // causing all hidden items to be out of the screen
        margin-right: inherit;

        &.active {
          + .#{$ci},
          + .#{$ci} + .#{$ci} {
            display: block; // three visible items
          }

          // prevents opposite direction "animation"
          &:not(.#{$ci}-right):not(.#{$ci}-left),
          &:not(.#{$ci}-right):not(.#{$ci}-left) + .#{$ci},
          &:not(.#{$ci}-right):not(.#{$ci}-left) + .#{$ci} + .#{$ci} {
            transition: none;
          }
    
          // allows new item to be visible in order to "slide in" into place
          + .#{$ci} + .#{$ci} + .#{$ci} {
            position: absolute;
            top: 0;
            right: -(percentage(1/3));
            z-index: -1;
            display: block;
            visibility: visible;
          }
        } // .active
        &-next,
        &-prev {
          position: relative;
          transform: translate3d(0, 0, 0);
        }
      } // .carousel-item
    
      // farthest right hidden item must be also positioned for animations 
      .#{$ci}-prev.#{$ci}-right {
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        display: block;
        visibility: visible;
      }
    } // .carousel-inner
    
    // left or forward direction 
    .active.#{$ci}-left + .#{$ci}-next.#{$ci}-left,
    .#{$ci}-next.#{$ci}-left + .#{$ci},
    .#{$ci}-next.#{$ci}-left + .#{$ci} + .#{$ci},
    .#{$ci}-next.#{$ci}-left + .#{$ci} + .#{$ci} + .#{$ci} {
      position: relative;
      transform: translate3d(-100%, 0, 0);
      display: block;
      visibility: visible;
    }

    // right or previous direction 
    .active.#{$ci}-right + .#{$ci}-prev.#{$ci}-right,
    .#{$ci}-prev.#{$ci}-right + .#{$ci},
    .#{$ci}-prev.#{$ci}-right + .#{$ci} + .#{$ci},
    .#{$ci}-prev.#{$ci}-right + .#{$ci} + .#{$ci} + .#{$ci} {
      position: relative;
      transform: translate3d(100%, 0, 0);
      display: block;
      visibility: visible;
    }
  } // multi-item-carousel
}


@media (min-width: 991px) {
  .multi-item-carousel {
    .carousel-inner {
      .#{$ci} {
        // NEW to v4.3.1: all margin-right properties come with -100% as default
        // causing all hidden items to be out of the screen
        margin-right: inherit;

        &.active {
          + .#{$ci},
          + .#{$ci} + .#{$ci},
          + .#{$ci} + .#{$ci} + .#{$ci} {
            display: block; // four visible items
          }

          // prevents opposite direction "animation"
          &:not(.#{$ci}-right):not(.#{$ci}-left),
          &:not(.#{$ci}-right):not(.#{$ci}-left) + .#{$ci},
          &:not(.#{$ci}-right):not(.#{$ci}-left) + .#{$ci} + .#{$ci},
          &:not(.#{$ci}-right):not(.#{$ci}-left) + .#{$ci} + .#{$ci} + .#{$ci} {
            transition: none;
          }
    
          // allows new item to be visible in order to "slide in" into place
          + .#{$ci} + .#{$ci} + .#{$ci} + .#{$ci} {
            position: absolute;
            top: 0;
            right: -(percentage(1/4));
            z-index: -1;
            display: block;
            visibility: visible;
          }
        } // .active
        &-next,
        &-prev {
          position: relative;
          transform: translate3d(0, 0, 0);
        }
      } // .carousel-item
    
      // farthest right hidden item must be also positioned for animations 
      .#{$ci}-prev.#{$ci}-right {
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        display: block;
        visibility: visible;
      }
    } // .carousel-inner
    
    // left or forward direction 
    .active.#{$ci}-left + .#{$ci}-next.#{$ci}-left,
    .#{$ci}-next.#{$ci}-left + .#{$ci},
    .#{$ci}-next.#{$ci}-left + .#{$ci} + .#{$ci},
    .#{$ci}-next.#{$ci}-left + .#{$ci} + .#{$ci} + .#{$ci},
    .#{$ci}-next.#{$ci}-left + .#{$ci} + .#{$ci} + .#{$ci} + .#{$ci} {
      position: relative;
      transform: translate3d(-100%, 0, 0);
      visibility: visible;
    }

    // right or previous direction 
    .active.#{$ci}-right + .#{$ci}-prev.#{$ci}-right,
    .#{$ci}-prev.#{$ci}-right + .#{$ci},
    .#{$ci}-prev.#{$ci}-right + .#{$ci} + .#{$ci},
    .#{$ci}-prev.#{$ci}-right + .#{$ci} + .#{$ci} + .#{$ci},
    .#{$ci}-prev.#{$ci}-right + .#{$ci} + .#{$ci} + .#{$ci} + .#{$ci} {
      position: relative;
      transform: translate3d(100%, 0, 0);
      display: block;
      visibility: visible;
    }
  } // multi-item-carousel
}


.carousel-control-next {
  opacity: 1;
}

.carousel-control-prev {
  opacity: 1;
}

.carousel-control-next:hover {
  .carousel-control-next-icon {
    border-color: $carousel-control-border-hover;
  }
}

.carousel-control-prev:hover {
  .carousel-control-prev-icon{
    border-color: $carousel-control-border-hover;
  }
}

.carousel-control-prev-icon {
    @include carousel-control-icon("left");
}

.carousel-control-next-icon {
    @include carousel-control-icon("right");
}

.carousel-caption {
    h5 {
        display: inline-block;
        padding: 10px;
        background: $carousel-caption-color;
        color: $text-color;
        border-top-left-radius: 10px;
        border-top-right-radius: 10px;
    }
}

.full-screen {
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    @media (min-width: 991px) {
      :hover {
        -webkit-filter: blur(2px);
        filter: blur(2px);
      } 
    }
}